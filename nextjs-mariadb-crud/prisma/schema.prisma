generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model customer {
  Id          Int     @id @default(autoincrement())
  FirstName   String  @db.VarChar(255)
  LastName    String  @db.VarChar(255)
  Email       String  @unique(map: "Email") @db.VarChar(255)
  CompanyName String? @db.VarChar(255)
}

model measurement {
  Id              Int                         @id @default(autoincrement())
  MeasurementType measurement_MeasurementType
  Unit            measurement_Unit
}

model measurementimage {
  Id            Int     @id @default(autoincrement())
  Name          String? @db.VarChar(255)
  S3Url         String? @db.VarChar(500)
  MeasurementId Int
}

model orderdetail {
  Id          Int                      @id @default(autoincrement())
  OrderId     Int
  ProductId   Int
  Price       Decimal                  @default(0.00) @db.Decimal(10, 2)
  Quantity    Int                      @default(1) @db.TinyInt
  SuitType    orderdetail_SuitType?
  TrouserId   Int?
  TailoredFit orderdetail_TailoredFit?
  FabricId    Int?
  LiningId    Int?
  ButtonId    Int?
}

model orders {
  OrderId          Int                   @id @default(autoincrement())
  CustomerId       Int
  MeasurementId    Int
  SalesOrderNumber String                @unique(map: "SalesOrderNumber") @db.VarChar(50)
  Sequence         Int?                  @db.TinyInt
  CreatedAt        DateTime?             @default(now()) @db.DateTime(0)
  Note             String?               @db.Text
  TotalAmount      Decimal               @default(0.000000) @db.Decimal(10, 6)
  Country          String?               @db.VarChar(100)
  City             String?               @db.VarChar(100)
  State            String?               @db.VarChar(100)
  ZipCode          String?               @db.VarChar(20)
  Phone            String?               @db.VarChar(15)
  ShippingMethod   orders_ShippingMethod
  DifferentAddress Boolean?              @default(false)
  PaymentStatus    orders_PaymentStatus
  StripeId         String?               @db.VarChar(1000)
  Lang             String?               @db.VarChar(10)
  CurrencyCode     String?               @db.VarChar(10)
  CurrencyRate     Decimal?              @default(1.000000) @db.Decimal(10, 6)
}

model product {
  Id          Int                 @id @default(autoincrement())
  Name        String              @db.VarChar(255)
  Description String?             @db.Text
  S3Url       String?             @db.VarChar(500)
  ProductType product_ProductType
  Code        String?             @unique(map: "Code") @db.VarChar(100)
  Price       Decimal             @default(0.000000) @db.Decimal(10, 6)
}

model producttranslation {
  Id             Int    @id @default(autoincrement())
  ProductId      Int
  Language       String @db.VarChar(10)
  TranslatedName String @db.VarChar(255)
}

model shirtmeasurement {
  Id               Int      @id @default(autoincrement())
  MeasurementId    Int
  Chest            Decimal? @db.Decimal(5, 2)
  Shoulder         Decimal? @db.Decimal(5, 2)
  ArmLength        Decimal? @db.Decimal(5, 2)
  ArmShoulderJoint Decimal? @db.Decimal(5, 2)
  ArmBicepWidth    Decimal? @db.Decimal(5, 2)
  JacketWidth      Decimal? @db.Decimal(5, 2)
  Abdomen          Decimal? @db.Decimal(5, 2)
  BellyTummy       Decimal? @db.Decimal(5, 2)
  Hips             Decimal? @db.Decimal(5, 2)
  Neck             Decimal? @db.Decimal(5, 2)
}

model trousermeasurement {
  Id            Int      @id @default(autoincrement())
  MeasurementId Int
  Waist         Decimal? @db.Decimal(5, 2)
  UpperHips     Decimal? @db.Decimal(5, 2)
  HipsCrotch    Decimal? @db.Decimal(5, 2)
  Outswarm      Decimal? @db.Decimal(5, 2)
  Thigh         Decimal? @db.Decimal(5, 2)
  Calf          Decimal? @db.Decimal(5, 2)
}

enum measurement_MeasurementType {
  Shirt
  Trouser
  Image
}

enum measurement_Unit {
  Cm
  Inch
}

enum product_ProductType {
  DesignOfSuit
  Jacket
  Trouser
  Shirt
  TailoredFit
  FabricOptions
  Button
  Lining
  SuitType
  TrouserType
}

enum orderdetail_SuitType {
  TWO_PIECE   @map("2piece")
  THREE_PIECE @map("3piece")
}

enum orderdetail_TailoredFit {
  SlimFit
  ComfortFit
}

enum orders_ShippingMethod {
  Standard
  Express
}

enum orders_PaymentStatus {
  failed
  success
  none
}
