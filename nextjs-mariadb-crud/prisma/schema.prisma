// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Customer {
  id          Int     @id @default(autoincrement())
  firstName   String  @db.VarChar(255)
  lastName    String  @db.VarChar(255)
  email       String  @unique @db.VarChar(255)
  companyName String? @db.VarChar(255)
  orders      Order[]
}

model Measurement {
  id              Int       @id @default(autoincrement())
  measurementType String    @db.Enum(["Shirt", "Trouser"])
  unit            String    @db.Enum(["Cm", "Inch"])
  orders          Order[]
  shirtMeasurement ShirtMeasurement?
  trouserMeasurement TrouserMeasurement?
  images          MeasurementImage[]
}

model MeasurementImage {
  id            Int      @id @default(autoincrement())
  name         String?  @db.VarChar(255)
  s3Url        String?  @db.VarChar(500)
  measurement  Measurement @relation(fields: [measurementId], references: [id])
  measurementId Int
}

model Order {
  id              Int      @id @default(autoincrement())
  customer        Customer @relation(fields: [customerId], references: [id])
  customerId      Int
  measurement     Measurement @relation(fields: [measurementId], references: [id])
  measurementId   Int
  salesOrderNumber String  @unique @db.VarChar(50)
  createdAt      DateTime @default(now())
  note           String?  @db.Text
  totalAmount    Decimal  @db.Decimal(10,6)
  country        String?  @db.VarChar(100)
  city           String?  @db.VarChar(100)
  state          String?  @db.VarChar(100)
  zipCode        String?  @db.VarChar(20)
  phone          String?  @db.VarChar(15)
  shippingMethod String  @db.Enum(["Standard", "Express"])
  differentAddress Boolean @default(false)
  paymentStatus  String  @db.Enum(["failed", "success", "none"])
  stripeId       String?  @db.VarChar(1000)
  lang           String?  @db.VarChar(10)
  currencyCode   String?  @db.VarChar(10)
  currencyRate   Decimal @default(1.000000) @db.Decimal(10,6)
  orderDetails   OrderDetail[]
}

model OrderDetail {
  id            Int      @id @default(autoincrement())
  order         Order    @relation(fields: [orderId], references: [id])
  orderId       Int
  product       Product  @relation(fields: [productId], references: [id])
  productId     Int
  price         Decimal  @db.Decimal(10,2)
  quantity      Int      @default(1)
  suitType      String?  @db.Enum(["2piece", "3piece"])
  tailoredFit   String?  @db.Enum(["SlimFit", "ComfortFit"])
  fabricId      Int?
  liningId      Int?
  buttonId      Int?
}

model Product {
  id           Int      @id @default(autoincrement())
  name         String   @db.VarChar(255)
  description  String?  @db.Text
  s3Url        String?  @db.VarChar(500)
  productType  String  @db.Enum(["DesignOfSuit", "Jacket", "Trouser", "Shirt", "TailoredFit", "FabricOptions", "Button", "Lining", "SuitType", "TrouserType"])
  code         String?  @unique @db.VarChar(100)
  price        Decimal @db.Decimal(10,6)
  orderDetails OrderDetail[]
}

model ProductTranslation {
  id           Int     @id @default(autoincrement())
  product      Product @relation(fields: [productId], references: [id])
  productId    Int
  language     String  @db.VarChar(10)
  translatedName String @db.VarChar(255)
}

model ShirtMeasurement {
  id                 Int     @id @default(autoincrement())
  measurement        Measurement @relation(fields: [measurementId], references: [id])
  measurementId      Int
  chest             Decimal? @db.Decimal(5,2)
  shoulder          Decimal? @db.Decimal(5,2)
  armLength         Decimal? @db.Decimal(5,2)
  armShoulderJoint  Decimal? @db.Decimal(5,2)
  armBicepWidth     Decimal? @db.Decimal(5,2)
  jacketWidth       Decimal? @db.Decimal(5,2)
  abdomen           Decimal? @db.Decimal(5,2)
  bellyTummy        Decimal? @db.Decimal(5,2)
  hips              Decimal? @db.Decimal(5,2)
  neck              Decimal? @db.Decimal(5,2)
}

model TrouserMeasurement {
  id              Int     @id @default(autoincrement())
  measurement     Measurement @relation(fields: [measurementId], references: [id])
  measurementId  Int
  waist          Decimal? @db.Decimal(5,2)
  upperHips      Decimal? @db.Decimal(5,2)
  hipsCrotch     Decimal? @db.Decimal(5,2)
  outswarm       Decimal? @db.Decimal(5,2)
  thigh          Decimal? @db.Decimal(5,2)
  calf           Decimal? @db.Decimal(5,2)
}
